<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>test page 1</title>
    <link href="/83152bb082b3/"/>
    <url>/83152bb082b3/</url>
    
    <content type="html"><![CDATA[<!--markdown-->## Problem 1. Exponent by iteration ##\r\n----------\r\nWrite an iterative function ***<a style=\"color:#ff5252cc\">iterPower(base, exp)</a>*** that calculates the exponential ***<a style=\"color:#ff5252cc\">base<sup>exp</sup></a>*** by simply using successive multiplication. For example, ***<a style=\"color:#ff5252cc\">iterPower(base, exp)</a>*** should compute ***<a style=\"color:#ff5252cc\">base<sup>exp</sup></a>*** by multiplying ***<a style=\"color:#ff5252cc\">base</a>*** times itself ***<a style=\"color:#ff5252cc\">exp</a>*** times. Write such a function below.\r\n\r\nThis function should take in two values - ***<a style=\"color:#ff5252cc\">base</a>*** can be a float or an integer; ***<a style=\"color:#ff5252cc\">exp</a>*** will be an integer ≥ 0. It should return one numerical value. Your code must be iterative - use of the <a style=\"color:#ff5252cc\">**</a> operator is not allowed.\r\n\r\n## Answer ##\r\n----------\r\n```python\r\ndef iterPower(base, exp):\r\n    result = 1\r\n    while exp > 0:\r\n        result *= base\r\n        exp -= 1\r\n    return result\r\n```\r\n----------\r\n## Problem 2. Exponent by recurse ##\r\n----------\r\nIn Problem 1, we computed an exponential by iteratively executing successive multiplications. We can use the same idea, but in a recursive function.\r\n\r\nWrite a function ***<a style=\"color:#ff5252cc\">recurPower(base, exp)</a>*** which computes ***<a style=\"color:#ff5252cc\">base<sup>exp</sup></a>*** by recursively calling itself to solve a smaller version of the same problem, and then multiplying the result by ***<a style=\"color:#ff5252cc\">base</a>*** to solve the initial problem.\r\n\r\nThis function should take in two values - ***<a style=\"color:#ff5252cc\">base</a>*** can be a float or an integer; ***<a style=\"color:#ff5252cc\">exp</a>*** will be an integer ≥0. It should return one numerical value. Your code must be recursive - use of the <a style=\"color:#ff5252cc\">**</a> operator or looping constructs is not allowed.\r\n\r\n## Answer ##\r\n----------\r\n```python\r\ndef recurPower(base, exp):\r\n    result = 1\r\n    if exp == 0:\r\n        return result\r\n    return base*recurPower(base, exp-1)\r\n```\r\n----------\r\n## Problem 3. The greatest common divisor(1) ##\r\n----------\r\nThe greatest common divisor of two positive integers is the largest integer that divides each of them without remainder. \r\n\r\nFor example:\r\n```bash\r\ngcd( 2, 12) = 2\r\ngcd( 6, 12) = 6\r\ngcd( 9, 12) = 3\r\ngcd(17, 12) = 1\r\n```\r\n----------\r\nWrite an iterative function, ***<a style=\"color:#ff5252cc\">gcdIter(a, b)</a>***, that implements this idea. One easy way to do this is to begin with a test value equal to the smaller of the two input arguments, and iteratively reduce this test value by 1 until you either reach a case where the test divides both ***<a style=\"color:#ff5252cc\">a</a>*** and ***<a style=\"color:#ff5252cc\">b</a>*** without remainder, or you reach 1.\r\n\r\n## Answer ##\r\n----------\r\n```python\r\ndef recurPowerNew(base, exp):\r\n    if exp <= 0:\r\n        return 1\r\n    elif exp % 2 == 0:\r\n        return recurPowerNew(base*base, exp/2)\r\n    return base * recurPowerNew(base, exp - 1)\r\n```\r\n----------\r\n## Problem 4. The greatest common divisor(2) ##\r\n----------\r\nThe greatest common divisor of two positive integers is the largest integer that divides each of them without remainder. \r\n\r\nFor example:\r\n```bash\r\ngcd( 2, 12) = 2\r\ngcd( 6, 12) = 6\r\ngcd( 9, 12) = 3\r\ngcd(17, 12) = 1\r\n```\r\n----------\r\nA clever mathematical trick (due to Euclid) makes it easy to find greatest common divisors. Suppose that ***<a style=\"color:#ff5252cc\">a</a>*** and ***<a style=\"color:#ff5252cc\">b</a>*** are two positive integers:\r\n\r\n* If ***<a style=\"color:#ff5252cc\">b = 0</a>***, then the answer is ***<a style=\"color:#ff5252cc\">a</a>***\r\n* Otherwise, ***<a style=\"color:#ff5252cc\">gcd(a, b)</a>*** is the same as ***<a style=\"color:#ff5252cc\">gcd(b, a % b)</a>***\r\n\r\nWrite a function ***<a style=\"color:#ff5252cc\">gcdRecur(a, b)</a>*** that implements this idea recursively. This function takes in two positive integers and returns one integer.\r\n\r\n## Answer ##\r\n----------\r\n```python\r\ndef gcdIter(a,b):\r\n    result = min(a,b)\r\n    while a % result != 0 or b % result != 0:\r\n        result -= 1\r\n    return result\r\n```\r\n----------]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/0bd2c82276d3/"/>
    <url>/0bd2c82276d3/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre><code class="hljs bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre><code class="hljs bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre><code class="hljs bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
